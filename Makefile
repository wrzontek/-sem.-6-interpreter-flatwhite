## File generated by the BNF Converter (bnfc 2.9.3).

GRAMMAR_FILES= LexFlatwhite.hs AbsFlatwhite.hs ParFlatwhite.hs SkelFlatwhite.hs PrintFlatwhite.hs ErrM.hs
INTERPRETER_FILES=Interpreter.hs
#TYPE_CHECKER_FILES={TCheck,TUtil,TExec}.hs
FILES=Main.hs ${INTERPRETER_FILES} ${GRAMMAR_FILES}# ${TYPE_CHECKER_FILES}

# Makefile for building the parser and test program.

GHC        = ghc
HAPPY      = happy
HAPPY_OPTS = --array --info --ghc --coerce
ALEX       = alex
ALEX_OPTS  = --ghc

# List of goals not corresponding to file names.

.PHONY : all clean distclean

# Default goal.

all : TestFlatwhite interpreter

# Rules for building the parser.

AbsFlatwhite.hs LexFlatwhite.x ParFlatwhite.y PrintFlatwhite.hs TestFlatwhite.hs : flatwhite.cf
	bnfc --haskell --functor flatwhite.cf

%.hs : %.y
	${HAPPY} ${HAPPY_OPTS} $<

%.hs : %.x
	${ALEX} ${ALEX_OPTS} $<

TestFlatwhite : AbsFlatwhite.hs LexFlatwhite.hs ParFlatwhite.hs PrintFlatwhite.hs TestFlatwhite.hs
	${GHC} ${GHC_OPTS} $@

interpreter: *.hs
	ghc --make ${FILES} -o interpreter

# Rules for cleaning generated files.

clean :
	-rm -f *.hi *.o *.log *.aux *.dvi interpreter

distclean : clean
	-rm -f AbsFlatwhite.hs AbsFlatwhite.hs.bak ComposOp.hs ComposOp.hs.bak DocFlatwhite.txt DocFlatwhite.txt.bak ErrM.hs ErrM.hs.bak LayoutFlatwhite.hs LayoutFlatwhite.hs.bak LexFlatwhite.x LexFlatwhite.x.bak ParFlatwhite.y ParFlatwhite.y.bak PrintFlatwhite.hs PrintFlatwhite.hs.bak SkelFlatwhite.hs SkelFlatwhite.hs.bak TestFlatwhite.hs TestFlatwhite.hs.bak XMLFlatwhite.hs XMLFlatwhite.hs.bak ASTFlatwhite.agda ASTFlatwhite.agda.bak ParserFlatwhite.agda ParserFlatwhite.agda.bak IOLib.agda IOLib.agda.bak Main.agda Main.agda.bak flatwhite.dtd flatwhite.dtd.bak TestFlatwhite LexFlatwhite.hs ParFlatwhite.hs ParFlatwhite.info ParDataFlatwhite.hs Makefile


# EOF
